/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil-community/router";
export namespace Components {
    interface AppRoot {
    }
    interface ErrorPage {
    }
    interface HomePage {
    }
    interface MyComponent {
    }
    interface ProfilePage {
        "match"?: MatchResults;
    }
    interface SharedStateChild1 {
    }
    interface SharedStateChild2 {
    }
    interface SharedStatePage {
    }
    interface SharedStateParent {
    }
    interface SharedStateSepareate {
    }
    interface TwoWayBindingComponent {
        "showClearButton": boolean;
        "value": string;
    }
    interface TwoWayBindingObjectComponent {
        "value": { value1: string; value2: string };
    }
    interface TwoWayBindingObjectPage {
    }
    interface TwoWayBindingSimpleComponent {
        "value": string;
    }
    interface TwoWayBindingSimplePage {
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLErrorPageElement extends Components.ErrorPage, HTMLStencilElement {
    }
    var HTMLErrorPageElement: {
        prototype: HTMLErrorPageElement;
        new (): HTMLErrorPageElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLProfilePageElement extends Components.ProfilePage, HTMLStencilElement {
    }
    var HTMLProfilePageElement: {
        prototype: HTMLProfilePageElement;
        new (): HTMLProfilePageElement;
    };
    interface HTMLSharedStateChild1Element extends Components.SharedStateChild1, HTMLStencilElement {
    }
    var HTMLSharedStateChild1Element: {
        prototype: HTMLSharedStateChild1Element;
        new (): HTMLSharedStateChild1Element;
    };
    interface HTMLSharedStateChild2Element extends Components.SharedStateChild2, HTMLStencilElement {
    }
    var HTMLSharedStateChild2Element: {
        prototype: HTMLSharedStateChild2Element;
        new (): HTMLSharedStateChild2Element;
    };
    interface HTMLSharedStatePageElement extends Components.SharedStatePage, HTMLStencilElement {
    }
    var HTMLSharedStatePageElement: {
        prototype: HTMLSharedStatePageElement;
        new (): HTMLSharedStatePageElement;
    };
    interface HTMLSharedStateParentElement extends Components.SharedStateParent, HTMLStencilElement {
    }
    var HTMLSharedStateParentElement: {
        prototype: HTMLSharedStateParentElement;
        new (): HTMLSharedStateParentElement;
    };
    interface HTMLSharedStateSepareateElement extends Components.SharedStateSepareate, HTMLStencilElement {
    }
    var HTMLSharedStateSepareateElement: {
        prototype: HTMLSharedStateSepareateElement;
        new (): HTMLSharedStateSepareateElement;
    };
    interface HTMLTwoWayBindingComponentElement extends Components.TwoWayBindingComponent, HTMLStencilElement {
    }
    var HTMLTwoWayBindingComponentElement: {
        prototype: HTMLTwoWayBindingComponentElement;
        new (): HTMLTwoWayBindingComponentElement;
    };
    interface HTMLTwoWayBindingObjectComponentElement extends Components.TwoWayBindingObjectComponent, HTMLStencilElement {
    }
    var HTMLTwoWayBindingObjectComponentElement: {
        prototype: HTMLTwoWayBindingObjectComponentElement;
        new (): HTMLTwoWayBindingObjectComponentElement;
    };
    interface HTMLTwoWayBindingObjectPageElement extends Components.TwoWayBindingObjectPage, HTMLStencilElement {
    }
    var HTMLTwoWayBindingObjectPageElement: {
        prototype: HTMLTwoWayBindingObjectPageElement;
        new (): HTMLTwoWayBindingObjectPageElement;
    };
    interface HTMLTwoWayBindingSimpleComponentElement extends Components.TwoWayBindingSimpleComponent, HTMLStencilElement {
    }
    var HTMLTwoWayBindingSimpleComponentElement: {
        prototype: HTMLTwoWayBindingSimpleComponentElement;
        new (): HTMLTwoWayBindingSimpleComponentElement;
    };
    interface HTMLTwoWayBindingSimplePageElement extends Components.TwoWayBindingSimplePage, HTMLStencilElement {
    }
    var HTMLTwoWayBindingSimplePageElement: {
        prototype: HTMLTwoWayBindingSimplePageElement;
        new (): HTMLTwoWayBindingSimplePageElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "error-page": HTMLErrorPageElement;
        "home-page": HTMLHomePageElement;
        "my-component": HTMLMyComponentElement;
        "profile-page": HTMLProfilePageElement;
        "shared-state-child1": HTMLSharedStateChild1Element;
        "shared-state-child2": HTMLSharedStateChild2Element;
        "shared-state-page": HTMLSharedStatePageElement;
        "shared-state-parent": HTMLSharedStateParentElement;
        "shared-state-separeate": HTMLSharedStateSepareateElement;
        "two-way-binding-component": HTMLTwoWayBindingComponentElement;
        "two-way-binding-object-component": HTMLTwoWayBindingObjectComponentElement;
        "two-way-binding-object-page": HTMLTwoWayBindingObjectPageElement;
        "two-way-binding-simple-component": HTMLTwoWayBindingSimpleComponentElement;
        "two-way-binding-simple-page": HTMLTwoWayBindingSimplePageElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface ErrorPage {
    }
    interface HomePage {
    }
    interface MyComponent {
    }
    interface ProfilePage {
        "match"?: MatchResults;
    }
    interface SharedStateChild1 {
    }
    interface SharedStateChild2 {
    }
    interface SharedStatePage {
    }
    interface SharedStateParent {
    }
    interface SharedStateSepareate {
    }
    interface TwoWayBindingComponent {
        "onUpdate"?: (event: CustomEvent<string>) => void;
        "showClearButton"?: boolean;
        "value": string;
    }
    interface TwoWayBindingObjectComponent {
        "onUpdate"?: (event: CustomEvent<{ value1: string; value2: string }>) => void;
        "value": { value1: string; value2: string };
    }
    interface TwoWayBindingObjectPage {
    }
    interface TwoWayBindingSimpleComponent {
        "onUpdate"?: (event: CustomEvent<string>) => void;
        "value": string;
    }
    interface TwoWayBindingSimplePage {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "error-page": ErrorPage;
        "home-page": HomePage;
        "my-component": MyComponent;
        "profile-page": ProfilePage;
        "shared-state-child1": SharedStateChild1;
        "shared-state-child2": SharedStateChild2;
        "shared-state-page": SharedStatePage;
        "shared-state-parent": SharedStateParent;
        "shared-state-separeate": SharedStateSepareate;
        "two-way-binding-component": TwoWayBindingComponent;
        "two-way-binding-object-component": TwoWayBindingObjectComponent;
        "two-way-binding-object-page": TwoWayBindingObjectPage;
        "two-way-binding-simple-component": TwoWayBindingSimpleComponent;
        "two-way-binding-simple-page": TwoWayBindingSimplePage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "error-page": LocalJSX.ErrorPage & JSXBase.HTMLAttributes<HTMLErrorPageElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "profile-page": LocalJSX.ProfilePage & JSXBase.HTMLAttributes<HTMLProfilePageElement>;
            "shared-state-child1": LocalJSX.SharedStateChild1 & JSXBase.HTMLAttributes<HTMLSharedStateChild1Element>;
            "shared-state-child2": LocalJSX.SharedStateChild2 & JSXBase.HTMLAttributes<HTMLSharedStateChild2Element>;
            "shared-state-page": LocalJSX.SharedStatePage & JSXBase.HTMLAttributes<HTMLSharedStatePageElement>;
            "shared-state-parent": LocalJSX.SharedStateParent & JSXBase.HTMLAttributes<HTMLSharedStateParentElement>;
            "shared-state-separeate": LocalJSX.SharedStateSepareate & JSXBase.HTMLAttributes<HTMLSharedStateSepareateElement>;
            "two-way-binding-component": LocalJSX.TwoWayBindingComponent & JSXBase.HTMLAttributes<HTMLTwoWayBindingComponentElement>;
            "two-way-binding-object-component": LocalJSX.TwoWayBindingObjectComponent & JSXBase.HTMLAttributes<HTMLTwoWayBindingObjectComponentElement>;
            "two-way-binding-object-page": LocalJSX.TwoWayBindingObjectPage & JSXBase.HTMLAttributes<HTMLTwoWayBindingObjectPageElement>;
            "two-way-binding-simple-component": LocalJSX.TwoWayBindingSimpleComponent & JSXBase.HTMLAttributes<HTMLTwoWayBindingSimpleComponentElement>;
            "two-way-binding-simple-page": LocalJSX.TwoWayBindingSimplePage & JSXBase.HTMLAttributes<HTMLTwoWayBindingSimplePageElement>;
        }
    }
}
